#!/bin/bash
# vim : set filetype=sh

template_path=''
site_root=''

while getopts ":S:T:" opt; do
	case $opt in
		T)
			template_path=$(realpath $OPTARG)
			;;
		S)
			site_root=$(realpath $OPTARG)
			;;
		:)
			echo "Option -$OPTARG requires argument"
			exit 1
			;;
	esac
done

if [ -z "$template_path" ]; then
	echo "Error: no template path provided. Exiting.."
	exit 64
fi

if [ -z "$site_root" ]; then
	echo "Error: no site path provided. Exiting.."
	exit 64
fi

for dir in $site_root/*; do
	[ ! -L "$dir" ] || continue
	[ -e "$dir/item.json" ] || continue
	blom-article -A "$dir" -T "$template_path" -S "$site_root" &
done
wait

items=$(jq -s 'sort_by(.date_published) | reverse' $site_root/*/item.json)

host_url="http:\/\/www.ratan.blog"
path_list=$(echo "$items" | jq -r '.[].url' | sed "s/$host_url//g" - | tr " " "\n")
index=$(echo "$items" | jq -r '. | length')

redirect_map="$site_root/REDIRECT.map"
rm $redirect_map
touch $redirect_map
for path in $path_list; do
	echo "/$index $path;" >> $redirect_map
	((index--))
done

metaitems=$(echo "$items" | jq 'map({url,title,tags,date_published})')

tags_content=$(echo "$metaitems" | blom-tags | sed "s/($host_url/(/g" - |  markdown)
archive_content=$(echo "$metaitems" | blom-archive | sed "s/($host_url/(/g" - | markdown)
prose_boxes=$(echo "$metaitems" | sed "s/$host_url//g" | blom-prose)

today_tq=$(date --iso-8601 | blom-tqdate | tr -d "\n")
today_gr=$(date --iso-8601 | tr -d "\n")

m4	-D_TITLE="Tags" \
	-D_TODAY_TQ="$today_tq" \
	-D_TODAY_GR="$today_gr" \
	-D_ARTICLE_CLASS="" \
	-D_TOTAL_CONTENT="$tags_content" \
	-D_COMMENT_SECTION="" \
	$template_path/page.html \
	| tee $site_root/tags/index.html \
	| gzip --best --force > $site_root/tags/index.html.gz

m4	-D_TITLE="Archive" \
	-D_TODAY_TQ="$today_tq" \
	-D_TODAY_GR="$today_gr" \
	-D_ARTICLE_CLASS="" \
	-D_TOTAL_CONTENT="$archive_content" \
	-D_COMMENT_SECTION="" \
	$template_path/page.html \
	| tee $site_root/archive/index.html \
	| gzip --best --force > $site_root/archive/index.html.gz

m4	-D_TITLE="Creative" \
	-D_TODAY_TQ="$today_tq" \
	-D_TODAY_GR="$today_gr" \
	-D_ARTICLE_CLASS="creative" \
	-D_PROSE_BOXES="$prose_boxes" \
	-D_COMMENT_SECTION="" \
	$template_path/creative.m4 $template_path/page.html \
	| tee $site_root/creative/index.html \
	| gzip --best --force > $site_root/creative/index.html.gz

latest=$(echo "$items" | jq -r '.[0]')
latest_title=$(jq -n -r --argjson LATEST "$latest" '$LATEST.title')
latest_url=$(jq -n -r --argjson LATEST "$latest" '$LATEST.url')
latest_class=$(jq -n -r --argjson LATEST "$latest" '$LATEST._ratan_blog_class')
latest_content=$(jq -n -r --argjson LATEST "$latest" '$LATEST.content_html')
latest_editday_raw=$(jq -n -r --argjson LATEST "$latest" '$LATEST.date_modified')
latest_editday_gr=$(date -d "$latest_editday_raw" --iso-8601 | tr -d "\n")
latest_editday_tq=$(date -d "$latest_editday_raw" --iso-8601 | blom-tqdate | tr -d "\n")
latest_writeday_raw=$(jq -n -r --argjson LATEST "$latest" '$LATEST.date_published')
latest_writeday_gr=$(date -d "$latest_writeday_raw" --iso-8601 | tr -d "\n")
latest_writeday_tq=$(date -d "$latest_writeday_raw" --iso-8601 | blom-tqdate | tr -d "\n")
latest_dir=${latest_url##*/}

m4	-D_TITLE="$latest_title" \
	-D_ARTICLE_CLASS="$latest_class" \
	-D_TODAY_TQ="$today_tq" \
	-D_TODAY_GR="$today_gr" \
	-D_EDITDAY_TQ="$latest_editday_tq" \
	-D_EDITDAY_GR="$latest_editday_gr" \
	-D_WRITEDAY_TQ="$latest_writeday_tq" \
	-D_WRITEDAY_GR="$latest_writeday_gr" \
	-D_ARTICLE_CONTENT="$latest_content" \
	-D_PERMALINK="$latest_url" \
	-D_MDLINK="$latest_url/content.md" \
	-D_BASICLINK="$latest_url/content.html" \
	$template_path/content.m4 $template_path/main_comment.m4 $template_path/page.html \
	| tee $site_root/index.html \
	| gzip --best --force > $site_root/index.html.gz

echo "$items" | jq -c -f $template_path/jfroot.jq.json \
	| jq 'del(.items[]._ratan_blog_class)' \
	| tee $site_root/feeds/json \
	| gzip --best --force > $site_root/feeds/json.gz

blom-feed --atom < $site_root/feeds/json \
	| tee $site_root/feeds/atom \
	| gzip --best --force > $site_root/feeds/atom.gz

blom-feed --rss < $site_root/feeds/json \
	| tee $site_root/feeds/rss \
	| gzip --best --force > $site_root/feeds/rss.gz
